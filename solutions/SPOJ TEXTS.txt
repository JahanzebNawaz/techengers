SPOJ SOLUTIONS
                                                          ABSP1
#include <bits/stdc++.h>
using namespace std;

int main() 
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t,n,i;
	cin>>t;
	while(t--)
	{
		cin>>n;
		long long a[n],sum=0;
		for(i=0;i<n;i++)
			cin>>a[i];
		int x=1;
		for(i=1;i<n;i++)
		{
			sum+=(a[i]-a[i-1])*(n-x)*x;
			x++;
		}
		cout<<sum<<endl;
	}
	return 0;
}








                   ABSURD
#include <iostream>
#include<cmath>
using namespace std;
 
int main() {
	int t;
	cin.sync_with_stdio(false);
	cin>>t;
	while(t--)
	{
		long long int n,absurd,a,d,x,x1,x2,i,flag=0,absurd1,c;
		cin>>n;
		x=n;
		while(n%10==0)
		{
			n/=10;
		}
		d=n%10;
		a=floor(log10((double)n))+1;
		if(d==5)
		absurd=2*a-1;
		else absurd=2*a;
		x1=ceil(.95*n);x2=floor(1.05*n);
		for(i=x1;i<=x2;i++)
		{
			c=i;
		    while(c%10==0)
		  {
			c/=10;
		  }
		  a=floor(log10((double)c))+1;
		  d=c%10;
		  if(d==5)
		absurd1=2*a-1;
		else absurd1=2*a;
		if(absurd>absurd1)
		{
			flag=1;
			break;
		}
		}
		if(flag==1)
		cout<<"absurd"<<endl;
		else
		cout<<"not absurd"<<endl;
	}
	return 0;
}  

  





                    ABSYS
#include <stdio.h>
#define max 1000
int main (void)
{
   int  n,num1,num2,num3,j,i;
   char s1[max],s2[max],s3[max];
   char sp1,sp2,sp3,sp4,e,p;


   scanf("%d",&n);
   for (i=1;i<=n;i++)
{

scanf("%s%c%c%c%s%c%c%c%s",s1,&sp1,&p,&sp2,s2,&sp3,&e,&sp4,s3);
       for(j=0,num1=0,num2=0,num3=0;s1[j]!='\0';j++)
       {

          num1=(num1*10)+(s1[j]- '0');
          if (s1[j] =='m')
          {
             num1=0;
             break;
          }
       }
       for(j=0;s2[j]!='\0';j++)
       {
             num2=(num2*10)+(s2[j]-'0');
             if (s2[j] =='m')
             {
                     num2=0;
                     break;
             }
       }
       for(j=0;s3[j]!='\0';j++)
       {
            num3=(num3*10)+(s3[j]-'0');
            if (s3[j] =='m')
            {
              num3=0;
              break;
            }
       }
    if (num1==0)
        num1=(num3-num2);
    else if (num2==0)
        num2=(num3-num1);
    else
        num3=(num1+num2);
  printf( "%d + %d = %d\n",num1,num2,num3);
}

    return(0);
    }
      





           ACMT

#include <stdio.h>
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		long int e,n,count=0;
		scanf("%ld %ld",&e,&n);
	    if(e>2*n)
	    printf("%ld\n",n);
	    else if(n>2*e)
	    printf("%ld\n",e);
	    else
	    {
	    	count=(e+n)/3;
	    	printf("%ld\n",count);
	    }
	}
	
	return 0;
 }




ACPC10A

#include <stdio.h>
#include<math.h>
int main()
{
	int a,b,c;
	while(1){
	scanf("%d%d%d",&a,&b,&c);
	
	  if(a==0 && b==0 && c==0)
		break;
	
		else if((b-a)==(c-b))
		printf("AP %d\n",a+3*(b-a));
		
		else if(b/a == c/b)
		{
		 int r,i;
		 r=b/a;
		 i=pow(r,3);
		 printf("GP %d\n",a*i);
		}
		
		
	}
	return 0;
}






ACPC11B

#include<stdio.h>
#include<math.h>
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n;
		long long min=1000000;
		scanf("%d",&n);
		long long a[n];
		int i,j;
		for(i=0;i<n;i++)
		{
			scanf("%lld",&a[i]);
		}
		int m;
		scanf("%d",&m);
		long long b[m];
		for(j=0;j<m;j++)
		{
			scanf("%lld",&b[j]);
		}
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(min>(abs(a[i]-b[j])))
				min=abs(a[i]-b[j]);
			}
		}
		printf("%lld\n",min);
	}
	return 0;
}






ADDREV
#include<stdio.h>

int reverse_number(int n)
{
    int r=0, a;
    while(n>=1)
    {
        a=n%10;
        r=r*10+a;
        n=n/10;
    }
    return r;
}

int main()
{
    int n , i , x , y;
    int r , s , t;
    scanf("%d", &n);

    for (i=0 ; i<n; i++)
    {
        scanf("%d", &x);
        scanf("%d", &y);
        
        r = reverse_number(x);
        s = reverse_number(y);
    
        t = reverse_number(r+s);
        printf("%d\n", t );
    }
    return 0;
}




ADST01

#include <iostream>
using namespace std;
#define imod 123456791
long long modular_pow(long long base, long long exponent,long long mod)
{
    long long result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base)%mod;
        exponent = exponent >> 1;
        base = (base * base)%mod;
    }
    return result;
}
int main() 
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin>>t;
	while(t--)
	{
		long long n,res,a;
		cin>>n;
		a=modular_pow(10,n+1,1000000007);
		res=((5*imod)*(a-9*n-10)%1000000007)%1000000007 + n;
		if(res<0)
			res=(res+1000000007)%1000000007;
		cout<<res<<endl;
	}
	return 0;
}





AE00
#include<stdio.h>
#include<math.h>

int main()
{
    int i,j,n,cnt=0;
    scanf("%d",&n);

    
    for(i=1;i<=sqrt(n);i++)
        for(j=i+1;i*j<=n;j++)
            cnt++;
            
    cnt+=sqrt(n);
    printf("%d",cnt);
    return 0;
}






AFS
    #include<bits/stdc++.h>
    using namespace std;
    #define ll long long
 
    ll res[1000003];
    long fn[1000003];
     
    int main()
    {
    	ios::sync_with_stdio(false);
    	cin.tie(0);
    	ll i;
    	for(i=2;i<1000003;i++)
    	fn[i]=1;
    	for(i=2;i<=1000003;i++)
    	{
    		ll k=2;
    		for(;k*i<1000003;k++)
    		fn[k*i]+=i;
    	}
    	for(i=2;i<1000003;i++)
    	res[i]=res[i-1] + fn[i];
    	int t;
    	long n;
    	cin>>t;
    	while(t--)
    	{
    		cin>>n;
    		cout<<res[n]<<endl;
    	}
    	return 0;
    }






AMR10C
    #include<iostream>
    #include<vector>
    #include<algorithm>
    #include<utility>
    #include<cmath>
    using namespace std;
    #define _ ios::sync_with_stdio(false); cin.tie(0);
    #define f1(i,n) for(int i=1;i<=n;i++)
    #define f2(i,n) for(int i=2;i<=n;i++)
    #define max 10000007
    vector<long> small(max);
    void sieve()
    {
    	int i,j,sq=sqrt(max);
    	f1(i,max) small[i]=i;
    	f2(i,sq) if(small[i]==i) for(j=i*i;j<=max;j+=i) if(small[j]==j) small[j]=i;
    }
     
    int main()
    {
    	_
    	sieve();
    	int t;
    	cin>>t;
    	while(t--)
    	{
    	long n,num,prod,ans=0,count;
    	cin>>num;
    	int c[10000],k=0;
    	int temp=small[num]; count=0;
    	while(num!=1)
    	{
    	if(temp==small[num])
    	count++;
    	else
    	{
    		temp=small[num];
    		c[k++]=count;
    		count=1;
    	}
    	num/=small[num];
    	}
    	c[k]=count;
    	sort(c,c+(k+1),greater<int>());
    	cout<<c[0]<<endl;
        }
        return 0;
    }





AMR10G
#include <iostream>
#include <algorithm>
using namespace std;

/* Se recorre el arreglo buscando la menor diferencia entre el mayor y menor
 * elemento del subarreglo i hasta i+K */
int main(){
	unsigned long T, N, K, i, min;
	unsigned long hs[20000];
	cin >> T;
	while(T>0){
		cin >> N >> K;
		for(i=0;i<N;i++)
			cin >> hs[i];
		sort(hs, hs+N);
		min=1000000000;
		for(i=0;i<=N-K;i++){
			if(hs[i+K-1]-hs[i]<min)
				min=hs[i+K-1]-hs[i];
		}
		cout << min << endl;
		T--;
	}
}







AMR11E
#include<stdio.h>
int main()
{
	int a[10000]={0},i,j;
	for(i=2;i<10000;i++)
	{   
		if(a[i]==0){
		for(j=i+1;j<10000;j++)
		{
			if(j%i == 0)
			{
				a[j]++;
			}
		}}
	}
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n;
		scanf("%d",&n);
		for(i=30;i<10000;i++)
		{
			if(a[i]>=3)
			{
			
				n--;
				if(n==0)
				{
					printf("%d\n",i);
					break;
				}
				//	i++;
			}
		}
	}
	return 0;
}






AMZRCK
#include <iostream>
using namespace std;

int main() 
{
	cin.sync_with_stdio(false);
	long int a[1000000],i;
	a[0]=1,a[1]=1;
	for(i=2;i<1000000;i++)
		a[i]=a[i-1]+a[i-2];
	int t;
	cin>>t;
	while(t--)
	{
		long int n;
		cin>>n;
		
		cout<<a[n+1]<<endl;
	}
	return 0;
}





ANARC09B
#include<bits/stdc++.h>
using namespace std;
long long int gcd (long long int a , long long int b);

int main()
{
	long long int w,h,n,hcf,i;
	scanf("%lld%lld",&w,&h);
	while(w!=0&&h!=0)
	{
		if(w==h)
			cout<<"1"<<endl;
		else if(w>h&&w%h==0)
			cout<<w/h<<endl;
		else if(h>w&&h%w==0)
			cout<<h/w<<endl;
		else
		{
			n = w*h;
			hcf = gcd(w,h);
			n = n/hcf;
	//	n = n/hcf;
			printf("%lld\n",n);
		}
		scanf("%lld%lld",&w,&h);
	}
	return 0;
}


long long int gcd (long long int a , long long int b)
{
	if(b==0)
		return a;
	else 
		return gcd(b,a%b);	
}






AP2
#include<stdio.h>
int main()
{
	long int t;
	scanf("%ld",&t);
	while(t--)
	{
		long long int i,j,sum;
		scanf("%lld %lld %lld",&i,&j,&sum);
		long long int a,n,d;
		n=(2*sum)/(i+j);
		d=(j-i)/(n-5);
		a=i-(2*d);
		printf("%lld\n",n);
		long long int k,t;
		k=0;
		while(k<n)
		{
			t=a+(k*d);
			printf("%lld",t);
			printf(" ");
			k++;
		}
	}
	return 0;
}






APPROB
#include <iostream>
using namespace std;
long long int gcd(long long int x,long long int y)
{
	long long int temp;
	while(y!=0)
	{
		temp=y;
		y=x%y;
		x=temp;
	}
	return x;
}
int main()
{
	cin.sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--)
	{
		long long n;
		cin>>n;
		long long int num,den,hcf;
		num=((3*n*n)+1)/2;
		den=6*n*n*n;
		hcf=gcd(num,den);
		cout<<num/hcf<<"/"<<den/hcf<<endl;
	}
	return 0;
}





APS
#include <iostream>
using namespace std;
long long a[10000009];
long long pf[10000009];
int main() 
{
	long long i,j;
	for(i=3;i<=3163;i+=2)
	{
		if(a[i]==0)
		{
		for(j=i*i;j<=10000000;j+=2*i)
		{
			if(a[j]==0)
				a[j]=i;
		}
		}
	}
	for(i=2;i<=10000000;i++)
	{
		if(!(1&i))
			a[i]=2;
		if(a[i])
			pf[i]=pf[i-1]+a[i];
		else
			pf[i]=pf[i-1]+i;
	}
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin>>t;
	while(t--)
	{
		long int n;
		cin>>n;
		cout<<pf[n]<<endl;
	}
	return 0;
}







ARMY
#include <stdio.h>
 
int main()
{ int t;
scanf("%d",&t);
while(t--)
{ 
  int m,n;
  scanf("%d%d",&m,&n);
  int a[m],b[n], maximum,maximum1, c;
  for (c = 0; c < m; c++)
    scanf("%d", &a[c]);
  for(c=0;c<n;c++)
  {
  	scanf("%d",&b[c]);
  }
 
  maximum = a[0];
 
  for (c = 1; c < m; c++)
  {
    if (a[c] > maximum)
    {
       maximum  = a[c];
    }
  }
    maximum1=b[0];
   for (c = 1; c < n; c++)
  {
    if (b[c] > maximum1)
    {
       maximum1 = b[c];
    }
  }
  if(maximum>=maximum1)
  {
  	printf("Godzilla\n");
  }
  else if(maximum1>maximum)
  printf("MechaGodzilla\n");
}
  return 0;
}










ATOMS
#include<stdio.h>

int main()
{
    long long n,k,m,pro;    int t,i;

    scanf("%i",&t);

    while(t--)
    {
        scanf("%lld%lld%lld",&n,&k,&m);

        i=0;

       if(k <= m/n)
       {
           i++;

           pro = n*k;

           while( k <= m/pro)
           {
               i++;
               pro *= k;
           }

       }

        printf("%i\n",i);
    }
    return 0;
}







BEENUMS
#include<stdio.h>
#include<math.h>
int main()
{
    int n;
    scanf("%d",&n);
    while(n!=-1)
    {
        if(n%2)
        {
            n--;
            if(n%3==0)
            {
                n/=3;
                n=n*4+1;
                int t=sqrt(n);
                if(t*t==n)
                {
                    if(t%2)
                        printf("Y\n");
                    else
                        printf("N\n");
                }
                else
                    printf("N\n");
            }
            else
                printf("N\n");
        }
        else
            printf("N\n");
        scanf("%d",&n);
    }
    return 0;
}














BINSTIRL
#include<stdio.h>
int main()
{
	int t,n,k;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&n,&k);
		if((n-k)&(k-1)/2)
			printf("0\n");
		else
		printf("1\n");
	}
	return 0;
}






BITPLAY
    #include<iostream>
    #include<cmath>
    using namespace std;
    int main()
    {
    	ios::sync_with_stdio(false);
    	cin.tie(0);
    	int t,k,len,temp,i,cnt;
    	long n;
    	cin>>t;
    	while(t--)
    	{
    		cin>>n>>k;
    		temp=n-1;
    		len=floor(log2(temp)) + 1;
    		int a[len];
    		i=0; cnt=0;
    		while(temp)
    		{
    			a[i]=temp%2;
    			if(a[i]) cnt++;
    			i++;
    			temp/=2;
    		}
    		if(cnt<=k) 
    		{ 
    		cout<<n-1<<endl; continue;
    		}
    		for(i=1;i<len;i++)
    		{
    			if(cnt<=k)
    			break;
    			if(a[i])
    			{
    			a[i]=0;
    			cnt--;
    		    }
    		}
    		if(cnt>k) 
    		{
    			cout<<-1<<endl; continue;
    		}
    		for(i=0;i<len;i++)
    		temp=temp + pow(2,i)*a[i];
    		cout<<temp<<endl;
    	}
    	return 0;
    }








BOMARBLE
#include<stdio.h>
int main()
{
	while(1)
	{
		int n;
		scanf("%d",&n);
		if(n!=0){
		     long int a;
		     a=((3*n*n)+(5*n)+2)/2;
		     printf("%ld\n",a);
	           }
	    else
	    break;
	}
	return 0;
}


























