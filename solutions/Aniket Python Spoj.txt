ABSP1

i = int(raw_input())
for _ in range(i):
	n = int(raw_input())
	a = map(int,raw_input().split())
	d,c,s = [],0,0
	for x in range(1,n):
		t = abs(a[x] - a[x-1])
		c = c + 1
		d.append(t)
	for x in range(1,c+1):
		s = s + (x*(c+1-x)*d[x-1])
	print s
	
	
ABSYS

i = int(raw_input())
for x in range(0,i):
	a = raw_input()
	n = raw_input().split()
	if 'm'in n[0]:
		n[0] = str(int(n[4]) - int(n[2]))
	elif 'm'in n[2]:
		n[2] = str(int(n[4]) - int(n[0]))
	else:
		n[4] = str(int(n[0]) + int(n[2]))
	print ' '.join(n)


ACMT

# your code goes here
i= input()
for x in range(0,i):	
	a,b = map(int,raw_input().split())
	if max(a,b) > 2*min(a,b):
		print min(a,b)
		
	else:
		print (a+b)/3
		

ACPC10A

# your code goes here
while 1:
	a1,a2,a3 = map(int,raw_input().split())
	if (a1 == 0 and a2 == 0 and a3 == 0):
		break
	else:	
		if ((a1 + a3) == 2*a2):
			q = a2 - a1
			print 'AP',a3+q
		else:
			q = a2/a1
			print 'GP',a3*q
			
			
			
ADDREV

# your code goes here
i=input()
while i:
 x, y =  raw_input().split() 
 j=int(str(x)[::-1])
 k=int(str(y)[::-1])
 sum=j+k
 sm=int(str(sum)[::-1])
 print(sm)
 i=i-1

 
 
 
ADST01

i = int(raw_input())
for _ in range(i):
	n = int(raw_input())
	m,sum = 1000000007,6*n
	a = pow(10,n,m)
	b = (9*n +1)%m
	t = (a-b+m)%m
	sum2 = (t*123456791*50)%m
	print (sum+sum2)%m
	
	
	
	
AE00

from math import *
i = int(raw_input())
sum = 0
for x in range(1,int(sqrt(i))+1):
	sum = sum + ((i/int(x))-(x-1))
print sum 



AFS

from math import *
i = int(raw_input())
for _ in range(i):
	n = int(raw_input())
	if n == 1:
		print 0
		continue
 
	sum = n - 1
	t1 = (n/2) + 1
	
	i = 1
	lim = int(sqrt(n)) + 1
	tsum = (t1*(t1 - 1))/2
	for x in xrange(2,lim):
		sum = sum + (t1- 2) * x
		t2 = n/(x+1) + 1
		#print 't1',t1,'t2',t2,'x',i
		t2sum = (t2*(t2-1))/2
		if t2 != lim - 1:
			sum = sum + (tsum - t2sum)*(i)
		i = i + 1
		t1 = t2
		tsum = t2sum
	print sum
	
	
	

AFS2

from math import *
i = int(raw_input())
for _ in range(i):
	n = int(raw_input())
	if n == 1:
		print 0
		continue

	sum = n - 1
	t1 = (n/2) + 1
	
	i = 1
	lim = int(sqrt(n)) + 1
	tsum = (t1*(t1 - 1))/2
	for x in xrange(2,lim):
		sum = sum + (t1- 2) * x
		t2 = n/(x+1) + 1
		#print 't1',t1,'t2',t2,'x',i
		t2sum = (t2*(t2-1))/2
		if t2 != lim - 1:
			sum = sum + (tsum - t2sum)*(i)
		i = i + 1
		t1 = t2
		tsum = t2sum
	print sum
			
			
			
			
			
			
			
ALICESIE

from math import *
i = int(raw_input())
for _ in range(i):
	print int(ceil((int(raw_input()))/2.0))
	
	

AMR11E

# your code goes here
i = input()
for x in range(0,i):
	n = input()
	a
	print a[-n]
	

	
	
AMR12D

# your code goes here
i = input()
for x in range(0,i):
	a = raw_input()
	a1 = a[: :-1]
	if a1 == a:
		print 'YES'
	else:
		print 'NO'
		
		
		
ARMY

from math import *
i = int(raw_input())
for _ in range(i):
	a1 = raw_input()
	n,m = raw_input().split()
	a = map(int,raw_input().split())
	b =  map(int,raw_input().split())
	x,y = max(a),max(b)
	if x>=y:
		print "Godzilla"
	else:
		print "MechaGodzilla"



ATOMS

# your code goes here
from math import *
i = input()
for x in range (0,i):
	n,k,m = map(int,raw_input().split())
	if n>m:
		print 0
	else:	
		r = log(m/n)/log(k)
		print int (r)
		


BANDW

while 1:
	a,b = raw_input().split()
	if a == '*':
		break
	n = len(a)
	f,c = 0,0
	for x in range(0,n):
		if a[x] == b[x]:
			f = 0
		else:
			if f == 0:
				c = c + 1
			f = 1
	print c



BC

from math import *
i = int(raw_input())
for x in range(1,i+1):
	print 'Case #%i:'%x,
	a = map(int,raw_input().split())
	p = 1
	for v in a:
		p = p*v
	print p - 1,
	su = 0
	for v in a:
		su = su + int(ceil(log(v)/log(2)))
	print su


BEENUMS

while 1:
	a = int(raw_input())
	if a == -1:
		break
	x = (3+(9+(12*(a-1)))**(0.5))/2
	if int(x) == x:
		print 'Y'
	else:
		print 'N'




BINSTIRL

# your code goes here
# your code goes here

i = input()
for x in range (0,i):
	n,m = map(int,raw_input().split())
	w = ((n-m)&((m-1)/2))
	if w:
		print 0
	else:
		print 1




BISHOPS

while 1:
	
	try:
		n = raw_input()
		if int(n) == 1:
			print 1
			continue
		print int(n)+(int(n)-2)
	except:
		break



BITPLAY

i = int(raw_input())
for _ in range(i):
	n,k = map(int,raw_input().split())
	if k == 0:
		print -1
		continue
	if k == 1:
		print 1
		continue
	b = list(bin(n)[:1:-1])
	# print b
	x1 = 0
	for x in b:
		if x == '0':
			b[x1] = '1'
			x1 = x1 + 1
		else:
			b[x1] = '0'
			break
	c1 = b.count('1')
	if k < c1:
		w = c1-k
		x1 = 1
		for x in b[1:]:
			if w:
				if x == '1':
					b[x1] = '0'
					w = w - 1
				x1 = x1 + 1	
			else:
				break
		b = b[::-1]
		b1 = ''.join(b)
		#print b1
		print int(b1,2)
	else:
		b = b[::-1]
		b1 = ''.join(b)
		print (int(b1,2))




BWIDOW

# your code goes here
i = int(raw_input())
for x in range(i):
	n = int(raw_input())
	inn = [0]*n
	ou = [0]*n
	for w in range(n):
		inn[w],ou[w] = map(int,raw_input().split())
	a = ou.index(max(ou))
	
	ou.pop(a)
	if inn[a] > max(ou):
		print a+1
	else:
		print -1
	


BYECAKES

from math import *
while 1:
	a = map(int,raw_input().split())
	if a[0] == -1:
		break
	mx = 0
	for x in range(0,4):
		n = int(ceil((a[x]*1.0)/a[x+4]))
		if mx < n:
			mx = n
	
	for x in range(0,4):
		print ((mx*a[x+4])-a[x]),
	print
	


CADYDIST

while 1:
	n = int(raw_input())
	if n == 0:
		break
	else:
		sum = 0
		c = map(int,raw_input().split())
		m = map(int,raw_input().split())
		c.sort()
		m.sort()
		for x in range(n):
			sum = sum + c[n-1-x]*m[x]
	print sum




CANDY3

i = int(raw_input())
for x in range(i):
	a1 = raw_input()
	a = int(raw_input())
	c = 0
	for y in range(a):
		c = c + int(raw_input())
		c = c%a
	if c%a == 0:
		print 'YES'
	else:
		print 'NO'



CECQ

def hcf(a2,b2):
    while(a2%b2!=0):
        c2=a2%b2
        a2=b2
        b2=c2
    return b2
i = input()
for x in range (1,i+1):
	a,b,c = map(int, raw_input().split())
	if c % hcf(a,b) == 0:
		print 'Case %d: Yes'%x
	else:
		print 'Case %d: No'%x
	


CHOTU

# your code goes here
from math import *
i = int(raw_input())
for w in range(0,i):
	a,b = map(int,raw_input().split())
	c = sqrt((a**2)-(b**2))
	print '%.3f'%(2.0*c)


CIRCLE_E

from math import *
i = int(raw_input())
for w in range(i):
	r1,r2,r3 = map(int, raw_input().split())
	k1 = 1.0/r1
	k2 = 1.0/r2
	k3 = 1.0/r3
	k4 = k1 + k2 + k3 + 2*sqrt(k1 * k2 + k2 * k3 + (k3 * k1))
	q = 1.0/k4
	print '%0.6f'%q



CLASSICO

i = int(raw_input())
for i1 in range(0,i):
	print 'Case %i:'%(i1 + 1),
	n = int(raw_input())
	a = map(int,raw_input().split())
	if n<11:
		print 'go home!'
	elif n == 11:
		for q in range(n):
			print a[q],
		print
		
	else:
		mxi = -1
		for x in range(0,11):
			im = mxi
			mx = 0
			for y in range(im+1,n-10+x):
				if a[y]>mx:
					mxi = y
					mx = a[y]
			print a[mxi],
		print 


CLONE

import collections
while 1:
	n,m = map(int,raw_input().split())
	if n == 0 and m == 0:
		break
	else:
		a = []
		x = 0
		for y in range(n):
			a.append(raw_input())
		b = collections.Counter(a)	
		d = b.values()
		r = collections.Counter(d)
		k = r.keys()
		
		for x in range(1,n+1):
			if x in k:
				print r[x]
			else:
				print 0
	

CODEIT03

from datetime import *
i = int(raw_input())
for x in range (i):
	a,b,c = map(int,raw_input().split())
	z = date(c,b,a).weekday()
	if z == 0:
		print "Monday"
	elif z == 1:
		print 'Tuesday'
	elif z == 2:
		print 'Wednesday'
	elif z == 3:
		print 'Thursday'
	elif z == 4:
		print 'Friday'
	elif z == 5:
		print 'Saturday'
	elif z == 6:
		print 'Sunday'



COEF

from math import *
while 1:
    try:
        n,k = map(int,raw_input().split())
    except:
        break
    a = map(int,raw_input().split())
    n = factorial(n)
    m = 1
    for x in a:
        m = m *factorial(x)
    print n/m
 


CRDS

i = int(raw_input())
for x in range(i):
	n = int(raw_input())
	print ((n*(3*n+1))/2)%1000007



CUTCAKE

i = int(raw_input())
for x in range(i):
	n = int(raw_input())
	n = (n-1)*2
	s = (-1.0+((1+4.0*n)**(0.5)))/2.0
	print int(s)



DCEPC11B

def ex(a,y,c):
	b = y
	x = 1
	while(b!=0):
		if(b&1 == 1):
			x = (x*a)%c
		a = (a*a)%c
		b >>= 1
	return x
i = int(raw_input())
for x in range(0,i):
	n,p = map(int,raw_input().split())
	w = p-n
	m = 1
	if(n>=p):
		print 0
		continue
    
	for r in range(1,w):
		m = ((n+r)*m)%p
	m = ex(m,p-2,p)
	m = (-m)%p
	print m 



DCRYPT

i = int(raw_input())
for _ in range(i):
	k = int(raw_input())
	a = (raw_input())
	d = []
	dict1={'a':1,'b':2,'c':3,'d':4,'e':5,'f':6,'g':7,'h':8,'i':9,'j':10,'k':11,'l':12,'m':13,'n':14,'o':15,'p':16,'q':17,'r':18,'s':19,'t':20,'u':21,'v':22,'w':23,'x':24,'y':25,'z':26,'.':-k,'A':27,'B':28,'C':29,'D':30,
	'E':31,'F':32,'G':33,'H':34,'I':35,'J':36,'K':37,'L':38,'M':39,'N':40,'O':41,'P':42,'Q':43,'R':44,'S':45,'T':46,'U':47,'V':48,'W':49,'X':50,'Y':51,'Z':52}
	dict2={0:' ',1:'a', 2:'b', 3:'c', 4:'d', 5:'e', 6:'f', 7:'g', 8:'h', 9:'i', 10:'j', 11:'k', 12:'l', 13:'m', 14:'n', 15:'o', 16:'p', 17:'q', 18:'r', 19:'s', 20:'t', 21:'u', 22:'v', 23:'w', 24:'x', 25:'y', 26:'z',
	27:'A',28:'B',29:'C',30:'D',31:'E',32:'F',33:'G',34:'H',35:'I',36:'J',37:'K',38:'L',39:'M',40:'N',41:'O',42:'P',43:'Q',44:'R',45:'S',46:'T',47:'U',48:'V',49:'W',50:'X',51:'Y',52:'Z'}
	n = len(a)
	if k <26:
		i = 0
		while i<n:
			v = dict1[a[i]]
			if v <= 26:
				v = v + k
				if v > 26:
					v = v - 26
			else:
				v = v + k
				if v>52:
					v = v - 26
			i = i + 1
			d.append(dict2[v])
		de = ''.join(d)
		print de
	else:
		k = k - 26
		i = 0
		while i<n:
			v = dict1[a[i]]
			if v <= 26:
				v = v + k
				if v > 26:
					v = v - 26
			else:
				v = v + k
				if v>52:
					v = v - 26
			i = i + 1
			if v <= 26 and v != 0:
				v = v + 26
			elif v > 26:
				v = v - 26
			d.append(dict2[v])
		de = ''.join(d)
		print de
		



DIEHARD

i = int(raw_input())
for x in range(0,i):
	h,a = map(int,raw_input().split())
	c = 1
	f = 0
	while h>0 and a>0:
		if f:
			c = c + 2
		h = h + 3
		a = a + 2
		if a <= 10:
			f = 1
			h = h - 20
			a = a + 5
		else:
			f = 1
			h = h - 5
			a = a - 10
	print c





DOTAA

i = int(raw_input())

for x in range(i):
	n,m,d = map(int,raw_input().split())
	c = 0
	for r in range(n):
		a = int(raw_input()) - 1
		c = c + a/d
	if c < m:
		print 'NO'
	else:
		print 'YES'





DWRONG

from fractions import *
while 1:
	b,n = map(int,raw_input().split())
	if b == 0:
		break
	t1 = gcd(b,n)
	tp = n/t1
	for x in xrange(2*n,0,-tp):
		a = (b*x*(2.0*n - x))/(n*n)
		#print a
		if a == int(a) and a>= 0:
			if a == b and n == x:
				continue
			print str(int(a))+'/'+str(x),
	print 
	



EC_CONB

for _ in xrange(int(raw_input())):
	n = int(raw_input())
	if n & 1:
		print n
	else:
		print int(bin(n)[: 1: -1], 2)




EGYPIZZA

from math import *
i = int(raw_input())
x = 0
y = 0
z = 0
for w in range(i):
	a = raw_input()
	if a == '3/4':
		y = y + 1
	elif a == '1/2':
		x = x + 1
	else:
		z += 1

te = x%2
temp = 0
if y>= z:
	z1 = 0
else:
	z1 = z - y
if te == 1 and z1 >= 2:
	temp = 1
	z2 = z1 - 2
elif te == 1 and z1 < 2:
	temp = 1
	z2 = 0
else:
	z2 = z1
z3 = ceil(z2/4.0)
t = 1 + y + x/2 + temp + z3
print int(t)







EIGHTS

t=int(raw_input())
while t:
	n=int(raw_input())
	ans=192+(n-1)*250
	print ans
	t-=1




ENIGMATH

def hcf(a2,b2):
    while(a2%b2!=0):
        c2=a2%b2
        a2=b2
        b2=c2
    return b2
i = input()
for x in range (1,i+1):
	a,b = map(int, raw_input().split())
	s = hcf(a,b)
	print b/s ,a/s
	




FACEFRND

while 1:
	i = (raw_input())
	if not i:
		continue
	else:
		break
i = int(i)
a = [0]*i
b = []
for x in range(0,i):
	while True:
		a[x] = map(int,raw_input().split())
		if not a[x]:
			continue
		else:
			break
	b = b + a[x][2:(a[x][1]+2)]
b = list(set(b))
for x in range(0,i):
	try:
		b.remove(a[x][0])
	except:
		pass
print int(len(b))
	





FASHION

i = int(raw_input())
for x in range(i):
	n = int(raw_input())
	a = map(int,raw_input().split())
	b = map(int,raw_input().split())
	a.sort()
	b.sort()
	s = 0
	for c in range(0,n):
		s = s + a[c]*b[c]
	print s




FAST2

# your code goes here
# your code goes here
i = int(raw_input())
while i:
	i = i - 1
	n = int(raw_input())
	print ((2**(n+1))-1)% 1298074214633706835075030044377087





FAVDICE

h = [0]*1009
for x in range(1,1003):
	h[x] = h[x-1] + (1.0/x)
i = int(raw_input())
for x in range(i):
	s = int(raw_input())
	print '%0.2f'%(s*h[s])




FCTRL2

# your code goes here
i=input()
while i:
 i=i-1
 a=1
 y=input()
 for x in range (1,y+1):
  a=x*a
 print a





GEOPROB

t=int(raw_input())
while t:
	b,c,d=map(int,raw_input().split())
	print (2*c-(b+d))
	t-=1





GIRLSNBS

while ( 1 ):
	c,d = raw_input().split()
	a =int (c)
	b = int (d)
	if  ( a != -1 ):
		a1 = max( a,b)
		a2 = min( a,b)
		a2 = a2 +1
		q = a1/a2
		r = a1%a2
	
		if r == 0 :
			print q
		else :
			print q +1
	
	else :
		break






GLJIVE

s = 0
for x in range(10):
	a = int(raw_input())
	s = s + a
	if s >= 100:
		x1 = 100 - (s-a)
		y1 = s - 100
		if x1 < y1:
			print s-a
		else:
			print s
		break
if s< 100:
	print s




GOOODB

import math
a,b,c,d = map(int,raw_input().split())
if a == 0:
	print 1
	quit()
print (math.factorial(a)/(math.factorial(b)*math.factorial(c)*math.factorial(d)))%1000000007



GUANGGUN

while 1:
	try:
		n = int(raw_input())
		x = n/9
		x1 = n%9
		a = 81*x + (x1)**2
		print a
	except:
		break




HANDS

i = int(raw_input())
for x in range(i):
	while True:
		min  = raw_input()
		if not min:
			continue
		else:
			break
	min = list(min)
	while True:
		max = raw_input()
		if not max:
			continue
		else:
			break
	max = list(max)
	a = [0,106,211,317,422,528,633,739,844,950,1055,1200,1306,1411,1517,1622,1728,1833,1939,2044,2150,2255,2400]
	min.remove(':')
	max.remove(':')
	c = 0
	l = int(''.join(min))
	m = int(''.join(max))
	for w in a:
		if w>l and w<=m:
			c = c + 1
	print c
	
	

HANGOVER

while 1:
	n = 0
	c = 0
	i = float(raw_input())
	if i == 0.00:
		break
	for x in range(1,300):
		c = c + 1
		n = n + (1.0/(x+1))
		if n >= i:
			break
	print c,"card(s)"



HC

i = int(raw_input())
for w in range(i):
	s = 0
	n = int(raw_input())
	for x in range (n):
		a = raw_input()
		if a == 'lxh':
			s = s + 1
	if s%2 == 0:
		print 'hhb'
	else:
		print 'lxh'




HPYNOS

# your code goes here
# your code goes here
i = input()
t = 0 
x = 0
a = [-1]
while x != 1:
	if x in a:
		print -1
		t = -1
		break
	else:
		a.append(x)
		x = 0
		while i != 0:
			x = x + (i%10)**2
			i = i/10
		i = x
		t = t + 1
if t != -1:
	print t 





HPYNOS2

#include <bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
int res[1001]={0,1,0,0,0,0,0,5,0,0,1,0,0,2,0,0,0,0,0,4,0,0,0,3,0,0,0,0,3,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,5,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,2,0,0,0,0,4,0,0,4,0,0,3,0,0,1,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,4,0,4,0,3,5,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,0,0,0,3,0,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,0,5,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,2,0,0,5,0,0,0,0,0,5,3,0,0,0,0,0,5,0,0,5,0,5,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,5,0,0,6,0,5,5,0,0,0,0,0,0,0,5,0,0,6,0,0,0,4,0,0,5,0,0,0,0,5,5,0,0,0,0,6,0,0,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,0,0,6,0,5,5,0,0,0,0,0,3,0,0,0,0,6,0,0,0,6,0,3,4,0,0,0,0,0,0,0,0,4,0,0,0,0,0,3,0,5,0,0,0,0,0,0,2,0,0,5,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,5,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,6,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,3,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,3,0,0,6,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,4,0,3,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,5,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,5,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,6,0,4,0,0,4,0,0,3,0,0,4,0,3,5,0,0,0,0,0,0,0,3,0,5,0,0,0,0,0,0,0,5,5,0,0,0,0,6,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,3,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,6,0,1,};
void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
int main()
{
    int t;
    scanint(t);
    while(t--)
    {
        int n;
        scanint(n);
        if(n<=1000)
        {
            if(res[n])
                printf("%d\n",res[n]);
            else
                printf("-1\n");
            continue;
        }
        int sum = 0,r;
        while(n)
        {
            r= n%10;
            sum+=r*r;
            n/=10;
        }
        if(sum==1)
        {
            printf("1\n");
        }
        else{
            if(res[sum])
                printf("%d\n",res[sum]+1);
            else
                printf("-1\n");
        }
    }
    return 0;
}







HUBULLU

i = int(raw_input())
for x in range(i):
	a,b = raw_input().split()
	if b == '0':
		print 'Airborne wins.'
	else:
		print "Pagfloyd wins."




ICANDIES

i = int(raw_input())
for x in range(i):
	print 'Case %i:'%(int(x)+1),
	n = int(raw_input())
	if n<8:
		print -1
		continue
	if (n-5)%3 == 0:
		print n-5
	elif (n-10)%3 == 0 and n-10  > 0:
		print n - 10
	elif n%3 == 0 and n-15>0:
		print n-15
	else:
		print -1




IEEEBGAM

i = int(raw_input())
for x in range(i):
	n = int(raw_input())
	x = (n)/(n+1.0)
	print '%0.8f'%x




IITKWPCA

i = int(raw_input())
for x in xrange(i):
	a = list(set(raw_input().split()))
	print len(a)
	
	


IITKWPCB

def gcd(b,c):
	t = 1
	while t != 0:
		t = b%c
		b = c 
		c = t
	return b
i = int(raw_input())
for x in range(i):
	a = int(raw_input())
	if a == 1:
		print 0
	else:
		k = a/2
		while k != 0:
			g = gcd(a,k)
			if g == 1:
				print k
				break
			else:
				k = k - 1
				




IITKWPCN

i = int(raw_input())
for x in xrange(i):
	w,b = map(int,raw_input().split())
	if b%2 == 0:
		print '0.000000'
 	else:
		print '1.000000'





IITWPC4A

i = int(raw_input())
for x in range(i):
	a = (raw_input())
	a1 = len(a)
	su = 0
	m,n = map(int,raw_input().split())
	if n>m:
		print a1,
		t = a.count('a'*m)
		su = (n-m)*t
		print a1+su
	elif m>n:
		t = a.count('a'*m)
		su = (n-m)*t
		print a1 + su,
		print a1
	else:
		print a1,a1
				
		


JULKA

for x in range(0, 10):
 a=input()
 b=input()
 x=(a-b)/2
 print x+b
 print x




LASTDIG2

i = int(raw_input())
for _ in xrange(i):
	a,b = map(int,raw_input().split())
	if b == 0:
		print 1
	else:
		a = a%10
		b = b%4
		if b == 0:
			ans = a**4
		else:
			ans = a**b
		ans = ans%10
		print ans





LENGFACT

from math import *
i = int(raw_input())
for x in range(i):
	n = int(raw_input())
	if n == 1 or n == 0:
		print 1
	else:
		x = ceil((log(2.0*pi)-2.0*n + log(n)*(1.0 + 2*n))/(2.0*log(10)))
		print int(x)



MANGOES

from math import *
i = int(raw_input())
for x in range(i):
	a = int(raw_input())
	n = int(ceil((a-2.0)/2.0))
	su = (n*n)
	print su%a





MAXLN

i = int(raw_input())
for x in range(1,i+1):
	a = float(raw_input())
	print 'Case %d: %0.2f'%(x,4*a*a + 0.25)




MAXSUB

i = int(raw_input())
for x in range(i):
	while True:
		n = int(raw_input())
		if not n:
			continue
		else:
			break
	while True:
		a = map(int,raw_input().split())
		if not a:
			continue
		else:
			break
	
	a.sort()
	if a[-1] > 0:
		sum = a[-1]
		co = 0
		for y in range(2,n+1):
			if a[-y] > 0:
				sum = sum + a[-y]
			elif a[-y] == 0:
				co = co + 1
			else:
				break
		print sum , (2**co)%1000000009
	elif a[-1] == 0:
		c = 1
		for y in range(2,n+1):
			if a[-y] == 0:
				c = c + 1
			else:
				break
		print 0, ((2**c)-1)%1000000009
	else:
		co = 1
		sum = a[-1]
		for y in range(2,n+1):
			if a[-y] == sum:
				co = co + 1
			else:
				break
		print sum,(co%1000000009)




MAYY99_3

# your code goes here
def hcf(a2,b2):
    while(a2%b2!=0):
        c2=a2%b2
        a2=b2
        b2=c2
    return b2
i = input()
for x in range (0,i):
	a,b,c = map(int, raw_input().split())
	if max(a,b)>=c:
		if c % hcf(a,b) == 0:
			print 'YES'
		else:
			print 'NO'
	else:
		print 'NO'




MINCOUNT

# your code goes here
i = raw_input()
for x in range (0,int(i)):
	n = int(raw_input())
	print (n*(n+1))/6



MKEQUAL

i = int(raw_input())
for _ in range(i):
	m = int(raw_input())
	a = map(int,raw_input().split())
	v = reduce(lambda x,y :x+y,a)
	if v%m == 0:
		print m
	else:
		print m-1



MRECAMAN

from sys import stdin
from itertools import imap
 
def main():
    a = [0]*500002
    a[-1] = ''
    v = [True] * 3012501
    v[0] = False
    for x in xrange(1, 500001):
        if (a[x - 1] - x > 0) and v[a[x - 1] - x]:
            v[a[x - 1] - x] = False
            a[x] = a[x - 1] - x
        else:
            v[a[x - 1] + x] = False
            a[x] = a[x - 1] + x
 
    for x in imap(lambda y: a[int(y)], stdin):
        print x
 
main()






MUL

# your code goes here
i=input()
while i:
    x,y=raw_input().split()
    print int(x)*int(y)
    i=i-1





	
MYQ1

from math import *
n = int(raw_input())
for x in range(n):
	i = int(raw_input())
	if i == 1:
		print 'poor conductor'
	else:
		r = int(ceil((i-1.0)/5.0))
		if (i-1)%10 in [0,1,5,6]:
			s = 'W'
		elif (i-1)%10 in [2,3,8,9]:
			s = 'A'
			
		else:
			s = 'M'
			
		if (i-1)%10 in [0,1,2,9]:
			d = 'L'
		else:
			d = 'R'
		print r,s,d
		
		
		
		
		
		
		


		
NCLINE

i = int(raw_input())
for _ in range(i):
	n = int(raw_input())
	a = map(int,raw_input().split())
	s = 1 
	f = 0
	for x in range(0,n-1):
		s = s - a[x]
		if s<0:
			f = 1
			break
		s = s*2
	if a[n-1] != s:
		f = 1
	if f:
		print "No"
	else:
		print "Yes"
		
		
		
		
		
		
		

NGM

# your code goes here
x=input()
if x%10==0:
  print(2)
else:
  print(1)
  y=x%10
  print(y)
 
 
 
 
 
 
NSTEPS

i = int(raw_input())
for _ in range(i):
	x,y = map(int,raw_input().split())
	if x == y:
		if not x&1:
			print x+y
		else: 
			print x+y-1
	elif x == y+2:
		if not x&1:
			print x+y
		else:
			print x+y-1
	else:
		print 'No Number'
		
		
		
		
		
		
		
		
NY10A

i = int(raw_input())
for x in range(1,i+1):
	m = int(raw_input())
	print m,
	a = raw_input()
	d = [0]*8
	a1 = 'TTT'
	a2 = 'TTH'
	a6 = 'HTH'
	a3 = 'THT'
	a4 = 'THH'
	a5 = 'HTT'
	a7 = 'HHT'
	a8 = 'HHH'
	for y in range(1,39):
		s = a[y-1:y+2]
		if s == a1:
			d[0] = d[0] + 1
		elif s == a2:
			d[1] = d[1] + 1
		elif s == a3:
			d[2] = d[2] + 1
		elif s == a4:
			d[3] = d[3] + 1
		elif s == a5:
			d[4] = d[4] + 1
		elif s == a6:
			d[5] = d[5] + 1
		elif s == a7:
			d[6] = d[6] + 1
		elif s == a8:
			d[7] = d[7] + 1
	d = map(str,d)
	print ' '.join(d)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
OAE

i = int(raw_input())
a = []
max = 0
t = 0
mod = 314159
for x in range(i):
	a.append(int(raw_input()))
	if a[t] > max:
		max = a[t]
	t = t + 1
o = [0,1] 
e = [0,9]
for x in range (2,max+1):
		o.append((((9 * o[x-1]) % mod) + e[x-1]) % mod)
		e.append((((9 * e[x-1]) % mod) + o[x-1]) % mod)
	
for q in a:
	print e[q]






PARKET1

from math import *
a,b = map(int,raw_input().split())
t = (a+4.0)/2.0
x = int((sqrt((t*t)-4*(a+b)))/2 + t/2)
y = int( t - x)
print max(x,y),min(x,y)









PCPC12J

i = int(raw_input())
for x in range(0,i):
	n = raw_input()
	a = map(int,raw_input().split())
	a.append(101)
	a.sort()
	f = 0
	max = 0
	c = 0
	t = a[0]
	for w in a:
		if t == w:
			c = c + 1
		else:
			if c%t == 0:
				f = 1
				if c > max:
					max = c
					num = t
				elif c == max:
					if t < num:
						num = t
			t = w
			c = 1
	if f == 1:
		print num
	else:
		print -1













PHT

from math import *
i = int(raw_input())
for x in range(1,i+1):
	s = int(raw_input())
	if s < 3:
		print 'Case %d: 0'%x
	else:
		y =int(sqrt((1+s))-1)
		print "Case %d: %i"%(x,y)








POLCONST

i = int(raw_input())
for _ in range(i):
	a = int(raw_input())
	while a%2 == 0:
		a = a/2
	if a%3==0:
		a/=3
	if a%5==0:
		a = a/5
	if a%17==0:
		a/=17
	if a%257==0:
		a/=257
	if a%65537==0:
		a/=65537
		
	if a == 1:
		print 'Yes'
	else:
		print 'No'








ROOTCIPH

i = int(raw_input())
for x in range(i):
	a,b,c = map(int,raw_input().split())
	print a*a-(2*b)








RPLC

i = int(raw_input())
for x in range(1,i+1):
	print 'Scenario #%i:'%x,
	n = int(raw_input())
	a = map(int,raw_input().split())
	s = 1
	ys = 0
	for y in a:
		ys = ys + y
		if ys < s:
			s = ys
	if s >= 0:
		print 1
	else:
		print abs(s) + 1








RPLH

from math import *
i = int(raw_input())
for x in range(1,i+1):
	r,v = map(int,raw_input().split())
	g = 9.806
	try:
		q = (asin((r*g)/(v*v)))/2.0
		q = degrees(q)
		print 'Scenario #%d: %0.2f'%(x,q)
	except:
		print 'Scenario #%d: -1'%x%10







RROOT

i =  int(raw_input())
for _ in range(i):
	n = int(raw_input())
	a = n/2.0
	ar = (4.0*(a**1.5))/3.0
	p =  1 - ar/(n*n)
	print '%0.6f'%p






SCPC11B

while 1:
	i = int(raw_input())
	if not i:
		break
	
	a = [0]*i
	for x in range(i):
		a[x] = int(raw_input())
	if i < 8:
		print 'IMPOSSIBLE'
		continue
	a.sort()
	f = 0
	for y in range(i-1):
		if a[y+1] - a[y] > 200:
			f = 1
			print 'IMPOSSIBLE'
			break
	if f:
		continue
	elif 1422 - a[-1] >= 100:
		print 'IMPOSSIBLE'
	else:
		print 'POSSIBLE'
		








SHAKTI

# your code goes here
i = int(raw_input())
for x in range(0,i):
	a = int(raw_input())
	if a%2 == 0:
		print  "Thankyou Shaktiman"
	else:
		print  "Sorry Shaktiman"







SILVER

import math
while 1:
	i = int(raw_input())
	if not i:
		break
	n = math.log(i,2)
	print int(n)





SKYLINE

a = [0]*1001
s1 = 6*5*4
s2 = 4*3*2
a[3] = s1/s2
m = 1000000
for x in xrange(4,1001):
	s1 = 2*(2*x-1)*s1
	s2 = (x+1)*s2
	a[x] = (s1/s2)%m
while 1:
	n = int(raw_input())
	if n == 0:
		break
	print a[n]









SMALL

def gcd(a,b):
    while b:
        a,b=b,a%b
    return a 
mod=1000000007
lcm=[]
lcm.append(0)
i=2
x=1
lcm.append(1)
while i<10002:
	z=len(lcm)-1
	x=lcm[z]
	x=(i*x)/gcd(i,x)
	lcm.append(x)
	i=i+1
t=int(input())
while t:
 	t=t-1
 	y=int(input())
 	print lcm[y]%mod







SNGMSG

def getIt():
    case=[]
    case.append(raw_input())
    case.append(raw_input())
    return case
    
def decode(case):
    key=case[0]
    message=case[1]
    dict1={'a':1,'b':2,'c':3,'d':4,'e':5,'f':6,'g':7,'h':8,'i':9,'j':10,'k':11,'l':12,'m':13,'n':14,'o':15,'p':16,'q':17,'r':18,'s':19,'t':20,'u':21,'v':22,'w':23,'x':24,'y':25,'z':26}
    dict2={1:'a', 2:'b', 3:'c', 4:'d', 5:'e', 6:'f', 7:'g', 8:'h', 9:'i', 10:'j', 11:'k', 12:'l', 13:'m', 14:'n', 15:'o', 16:'p', 17:'q', 18:'r', 19:'s', 20:'t', 21:'u', 22:'v', 23:'w', 24:'x', 25:'y', 26:'z'}
    newKey=key+key[::-1]
    lenMessage=len(message)
    lenNewKey=len(newKey)
    if lenNewKey<lenMessage:
        newKey*=(lenMessage/lenNewKey+1)
    i=0
    deMessage=[]
    while i<lenMessage:
        value=dict1[message[i]]
        diff=int(newKey[i])
        newValue=value-diff
        if newValue>=1:
            deMessage.append(dict2[newValue])
        else:
            deMessage.append(dict2[26+newValue])
        i+=1
    newMessage=''.join(deMessage)
    print(newMessage)  
        
        
def main():
    noOfCase=int(raw_input())
    for i in range(noOfCase):
        case=getIt()
        decode(case)

main()
















SPEED

def hcf(a2,b2):
    while(a2%b2!=0):
        c2=a2%b2
        a2=b2
        b2=c2
    return b2
i = int(raw_input())
for x in range(0,i):
	a,b = map(int,raw_input().split())
	print (max(a,b) - min(a,b))/hcf(abs(a),abs(b))









STAMPS

i = int(raw_input())
for x in range(1,i+1):
	print "Scenario #%d:"%x
	m , num = map(int,raw_input().split())
	a = map(int,raw_input().split())
	a.sort()
	sum = 0
	for y in range(1,num+1):
		sum = sum + a[-y]
		if sum >= m:
			print y
			break
	if sum < m:
		print 'impossible'
	print ''










STREEETR

from fractions import *
i = int(raw_input())
x1 = int(raw_input())
x2 = int(raw_input())
d1 = x2 - x1
sum = d1
f = 0
for _ in range(i-2):
	x = int(raw_input())
	d = x-x2
	x2 = x
	sum = sum + d
	if f == 0:
		d1 = gcd(d1,d)
	if d1 == 1:
		f = 1
print (sum/d1) - (i - 1)
#print d1












SYNC13C

# your code goes here
# your code goes here
i = int(raw_input())
for x in range(0,i):
	a,b= map(int,raw_input().split())
	if a%2 != 0 and b%2 != 0:
		print 'Ramesh'
	else:
		print  "Suresh"










TOANDFRO

while 1:
	i = int(raw_input())
	if not i:
		break
	a = list(raw_input())
	b = []
	a = [0] + a
	a1 = len(a)/i
	n = 1
	b1 = n
	for x in range(1,i+1):
		a2 = x
		b.append(a[x])
		for y in range(1,a1):
			n = 2*i-n
			a2 = a2 + n
			b.append(a[a2])
		
		b1 = b1 + 2
		n = b1
	print ''.join(b)	














TOHU2

i = int(raw_input())
for x in range(i):
	for y in range(99):
		n , a = raw_input().split()
		if int(n) == 9:
			c = a
		elif int(n)%9 == 0 and int(n) != 99 and int(n) != 90:
			if c != a:
				print 'NO'
				break
	if y == 98:
		print 'YES'
		











TRICENTR

from math import sqrt
for _ in xrange(int(raw_input())):
	a, ga, gb, gc = map(float, raw_input().split())
	area = 3*a*ga / 2
	print round(area, 3),
	b = a*ga / gb
	c = a*ga / gc
	r = a*b*c / (4*area)
	ho = sqrt(abs(9 * r**2 - (a**2 + b**2 + c**2)))
 
	print round(2 * ho/3, 3)










TRICOUNT

i = int(raw_input())
for x in range(i):
    n = int(raw_input())
    print int((n*(n+2)*(2*n+1))/8)









TRITILE

i = int(raw_input())
for i1 in range(i):
	print 'No'











UCV2013A

import math
while(True):
    s=raw_input()
    str=s.split(' ')
    n=int(str[0])
    r=int(str[1])
    if(n==0 & r==0):
        break;
    else:
        ans=(n*(pow(n,r)-1)/(n-1))%1000000007
        print (ans)











UCV2013C

while 1:
	d,f,b,m = map(int,raw_input().split())
	if d == 0 and f == 0 and b == 0:
		break
	f1 = (f*(f+1))/2 + 1
	f1 = f1*b
	l = d - f1
	if l>= m:
		print "Farmer Cream will have %d Bsf to spend."%l
	else:
		print "The firm is trying to bankrupt Farmer Cream by %d Bsf."%(abs(l-m))
		
	









UCV2013I

from math import *
while 1:
	r,n = map(float,raw_input().split())
	if not r:
		break
	x = r/sin(pi/(2.0*n))
	print '%0.2f'%x










UJ

while 1:
	a,b = map(int,raw_input().split())
	if (a == 0 and b == 0):
		break
	else:
		print a**b







WILLITST

i = int(raw_input())
if i & (i-1) == 0:print 'TAK'
else:print 'NIE'





WTK

for _ in xrange(int(raw_input())):
	n = int(raw_input())
	print reduce(lambda q,k: (q+n-k)%k+1, xrange(2, n+1), 1)







YELBRICK

while 1:
	n = int(raw_input())
	if n == 0:
		break
	a = []
	mt = 1001
	for i in range(n):
		y = 1
		a1 = map(int,raw_input().split())
		m = min(a1)
		for i1 in a1:
			y = y*i1
		a.append(y)
		if m < mt:
			mt = m
	sum1 = 0
	mt = mt**3
	for i in a:
		sum1 = sum1 + i/mt
	print sum1

	
	
